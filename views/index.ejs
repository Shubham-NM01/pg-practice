<!-- views/index.ejs -->
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>File Upload & Document Viewer</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <!-- Add JSZip before docx-preview -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/docx-preview@0.1.15/dist/docx-preview.js"></script>
    <style>
        .file-preview-frame {
            width: 100%;
            height: 70vh;
            border: none;
        }

        #viewerInfo {
            margin-top: 10px;
            color: #666;
        }

        .loading-indicator {
            display: none;
            text-align: center;
            padding: 20px;
        }

        #docxPreview {
            width: 100%;
            height: 70vh;
            overflow-y: auto;
            padding: 20px;
            background: white;
        }

        .modal-xl {
            max-width: 90% !important;
        }

        .modal-body {
            padding: 0;
            min-height: 80vh;
            position: relative;
        }

        #docxPreview {
            width: 100%;
            height: 80vh;
            overflow-y: auto;
            padding: 20px;
            background: white;
        }

        .loading-indicator {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            text-align: center;
            background: rgba(255, 255, 255, 0.9);
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }
    </style>
</head>

<body>
    <div class="container mt-5">
        <div class="row">
            <div class="col-md-8 offset-md-2">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">File Upload & Document Viewer</h5>
                        <p class="card-text text-muted">DOCX files are viewed with full formatting preserved</p>
                        <form id="uploadForm" class="mt-3">
                            <div class="mb-3">
                                <input type="file" class="form-control" id="file" name="file" required>
                            </div>
                            <button type="submit" class="btn btn-primary">Upload</button>
                        </form>

                        <!-- Files List -->
                        <div class="mt-4">
                            <h6>Uploaded Files:</h6>
                            <ul class="list-group">
                                <% files.forEach(function(file) { %>
                                    <li class="list-group-item d-flex justify-content-between align-items-center">
                                        <%= file %>
                                            <div class="btn-group">
                                                <button class="btn btn-sm btn-info"
                                                    onclick="viewFile('<%= file %>')">View</button>
                                                <button class="btn btn-sm btn-success"
                                                    onclick="previewWithGoogleDocs('<%= file %>')">Preview</button>
                                                <a href="/uploads/<%= file %>" download
                                                    class="btn btn-sm btn-secondary">Download</a>
                                            </div>
                                    </li>
                                    <% }); %>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- File Viewer Modal -->
    <div class="modal fade" id="fileModal" tabindex="-1">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">File Preview</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div id="docxPreview" style="display: none;"></div>
                    <iframe id="fileViewer" class="file-preview-frame" style="display: none;"></iframe>
                    <div id="loadingIndicator" class="loading-indicator">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <p id="viewerInfo" class="mt-2">Loading document...</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>
        const uploadForm = document.getElementById('uploadForm');
        const fileModal = new bootstrap.Modal(document.getElementById('fileModal'));
        const fileViewer = document.getElementById('fileViewer');
        const loadingIndicator = document.getElementById('loadingIndicator');
        const viewerInfo = document.getElementById('viewerInfo');

        uploadForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const formData = new FormData(uploadForm);

            try {
                const response = await fetch('/upload', {
                    method: 'POST',
                    body: formData
                });
                const data = await response.json();

                if (response.ok) {
                    // Reload page to show new file in list
                    window.location.reload();
                } else {
                    alert('Upload failed: ' + data.error);
                }
            } catch (error) {
                alert('Upload failed: ' + error.message);
            }
        });
        async function viewFile(filename) {
            const fileViewer = document.getElementById('fileViewer');
            const docxPreview = document.getElementById('docxPreview');
            const loadingIndicator = document.getElementById('loadingIndicator');
            const viewerInfo = document.getElementById('viewerInfo');

            // Reset display
            fileViewer.style.display = 'none';
            docxPreview.style.display = 'none';
            docxPreview.innerHTML = ''; // Clear previous content
            loadingIndicator.style.display = 'block';
            viewerInfo.textContent = 'Loading document...';

            // Show modal
            fileModal.show();

            if (filename.toLowerCase().endsWith('.docx')) {
                try {
                    // Fetch the DOCX file
                    const response = await fetch(`/view/${filename}`);
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    const blob = await response.blob();

                    // Convert and display using docx-preview
                    await docx.renderAsync(blob, docxPreview, null, {
                        defaultFont: {
                            family: 'Arial',
                            size: 11
                        }
                    });

                    // Show preview div
                    docxPreview.style.display = 'block';
                    loadingIndicator.style.display = 'none';
                } catch (error) {
                    console.error('Error previewing DOCX:', error);
                    viewerInfo.textContent = `Error loading document: ${error.message}`;
                    loadingIndicator.style.display = 'block';
                }
            } else {
                try {
                    fileViewer.onerror = () => {
                        viewerInfo.textContent = 'Error loading document';
                        loadingIndicator.style.display = 'block';
                    };

                    fileViewer.src = `/view/${filename}`;
                    fileViewer.onload = function () {
                        fileViewer.style.display = 'block';
                        loadingIndicator.style.display = 'none';
                    };
                } catch (error) {
                    viewerInfo.textContent = `Error loading document: ${error.message}`;
                    loadingIndicator.style.display = 'block';
                }
            }
        }


        function previewWithGoogleDocs(filename) {
            fileViewer.style.display = 'none';
            loadingIndicator.style.display = 'block';
            viewerInfo.textContent = 'Using Google Docs Viewer';

            // Clear iframe src
            fileViewer.src = '';

            // Show modal
            fileModal.show();

            fileViewer.onload = function () {
                loadingIndicator.style.display = 'none';
                fileViewer.style.display = 'block';
            };

            // Use Google Docs Viewer
            const currentUrl = window.location.href;
            const baseUrl = currentUrl.split('/').slice(0, 3).join('/');
            const fileUrl = `${baseUrl}/uploads/${filename}`;
            const encodedFileUrl = encodeURIComponent(fileUrl);
            fileViewer.src = `/preview/${filename}`;
        }
    </script>
</body>

</html>